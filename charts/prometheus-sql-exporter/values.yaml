# Default values for prometheus-sql-exporter.

replicaCount: 1

image:
  repository: ghcr.io/justwatchcom/sql_exporter
  # if not set appVersion field from Chart.yaml is used
  tag: ""
  pullPolicy: IfNotPresent

  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistrKeySecretName

service:
  type: ClusterIP
  port: 80
  targetPort: 9237
  name: http
  labels: {}
  annotations: {}

serviceMonitor:
  # When set true then use a ServiceMonitor to configure scraping
  enabled: false
  # Set the namespace the ServiceMonitor should be deployed
  # namespace: monitoring
  # Set how frequently Prometheus should scrape
  # interval: 30s
  # telemetryPath: /metrics
  # Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator
  # labels:
  # Set timeout for scrape
  # timeout: 10s
  # Set of labels to transfer from the Kubernetes Service onto the target
  # targetLabels: []
  # MetricRelabelConfigs to apply to samples before ingestion
  # metricRelabelings: []
  # Set relabel_configs as per https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
  # relabelings: []

prometheusRule:
  enabled: false
  additionalLabels: {}
  namespace: ""
  rules: []

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #    memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
  # Add annotations to the ServiceAccount, useful for EKS IAM Roles for Service Accounts or Google Workload Identity.
  annotations: {}

# Add a default ingress to allow namespace access to service.targetPort
# Helpful if other NetworkPolicies are configured in the namespace
networkPolicy:
  # Specifies whether a NetworkPolicy should be created
  enabled: false
  # Set labels for the NetworkPolicy
  labels: {}

# The securityContext of the pod.
# See https://kubernetes.io/docs/concepts/policy/security-context/ for more.
podSecurityContext:
  runAsUser: 1001
  runAsGroup: 1001
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

# The securityContext of the container.
# See https://kubernetes.io/docs/concepts/policy/security-context/ for more.
securityContext:
  runAsUser: 1001
  runAsGroup: 1001
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: RuntimeDefault

hostAliases:
  []
  # Set Host Aliases as per https://kubernetes.io/docs/tasks/network/customize-hosts-file-for-pods/
  # - ip: "127.0.0.1"
  #   hostnames:
  #   - "foo.local"
  #   - "bar.local"

# See: https://github.com/justwatchcom/sql_exporter/blob/master/config.yml.dist
config: {}
# Allow to override the default file path. This can be useful if the initContainer needs to modify the values based configuration
configFilePath: "/config.yml"
# Allow to override how sql_exporter container is launched
# note that templating will be rendered
containerCommand:
  - "sql_exporter"
  - "-web.listen-address=:{{ .Values.service.targetPort }}"
  - "-config.file={{ .Values.configFilePath }}"

nodeSelector: {}

tolerations: []

affinity: {}

# Labels and annotations to attach to the pod resource
pod:
  annotations: {}
  labels: {}

# Labels and annotations to attach to the deployment resource
deployment:
  labels: {}
  annotations: {}

# Configurable health checks
livenessProbe:
  initialDelaySeconds: 3
  timeoutSeconds: 3

readinessProbe:
  initialDelaySeconds: 5
  timeoutSeconds: 10

# ExtraEnvs
extraEnvs:
  []
  # - name: EXTRA_ENV
  #   value: value
  # - name: POD_NAMESPACE
  #   valueFrom:
  #     fieldRef:
  #       fieldPath: metadata.namespace

# Init containers, e. g. for secrets creation before the exporter
initContainers:
  []
  # - name:
  #   image:
  #   volumeMounts:
  #     - name: creds
  #       mountPath: /creds

# Additional sidecar containers, e. g. for a database proxy, such as Google's cloudsql-proxy
extraContainers: []

# Additional volumes, e. g. for secrets used in an extraContainer
extraVolumes: []
# Uncomment for mounting custom ca-certificates
#  - name: ssl-certs
#    secret:
#      defaultMode: 420
#      items:
#      - key: ca-certificates.crt
#        path: ca-certificates.crt
#      secretName: ssl-certs

# Additional volume mounts
extraVolumeMounts: []
# Uncomment for mounting custom ca-certificates file into container
#  - name: ssl-certs
#    mountPath: /etc/ssl/certs/ca-certificates.crt
#    subPath: ca-certificates.crt

podDisruptionBudget:
  enabled: false
  maxUnavailable: 1
