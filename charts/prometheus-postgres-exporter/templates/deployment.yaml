{{- if and .Values.config.datasource.passwordSecret .Values.config.datasource.password -}}
{{ fail (printf "ERROR: only one of .Values.config.datasource.passwordSecret and .Values.config.datasource.password must be defined") }}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "prometheus-postgres-exporter.fullname" . }}
  labels:
    {{- include "prometheus-postgres-exporter.labels" . | nindent 4 }}
    {{- with .Values.deployment.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.deployment.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "prometheus-postgres-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "prometheus-postgres-exporter.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      serviceAccountName: {{ template "prometheus-postgres-exporter.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.initContainers }}
      initContainers:
{{ toYaml .Values.initContainers | indent 8 }}
{{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ template "prometheus-postgres-exporter.name" . }}
          args:
          - "--config.file=/etc/postgres_exporter.yml"
          - "--web.listen-address=:{{ .Values.service.targetPort }}"
          {{- if .Values.config.disableCollectorDatabase }}
          - "--no-collector.database"
          {{- end }}
          {{- if .Values.config.disableCollectorBgwriter }}
          - "--no-collector.stat_bgwriter"
          {{- end }}
          {{- if .Values.config.disableDefaultMetrics }}
          - "--disable-default-metrics"
          {{- end }}
          {{- if .Values.config.disableSettingsMetrics }}
          - "--disable-settings-metrics"
          {{- end }}
          {{- if .Values.config.logLevel }}
          - "--log.level={{ .Values.config.logLevel }}"
          {{- end}}
          {{- if .Values.config.logFormat }}
          - "--log.format={{ .Values.config.logFormat }}"
          {{- end}}
          {{-  if .Values.config.extraArgs  }}
          {{- .Values.config.extraArgs | toYaml | nindent 10 }}
          {{-  end  }}
          env:
          {{- if .Values.config.datasourceSecret }}
          - name: DATA_SOURCE_NAME
            valueFrom:
              secretKeyRef:
                name: {{ tpl .Values.config.datasourceSecret.name . }}
                key: {{ tpl .Values.config.datasourceSecret.key . }}
          {{- else }}
          - name: DATA_SOURCE_URI
            value: {{ template "prometheus-postgres-exporter.data_source_uri" . }}
          {{- if .Values.config.datasource.userSecret }}
          - name: DATA_SOURCE_USER
            valueFrom:
              secretKeyRef:
                name: {{ tpl .Values.config.datasource.userSecret.name . }}
                key: {{ tpl .Values.config.datasource.userSecret.key . }}
          {{- else }}
          {{- if .Values.config.datasource.userFile }}
          - name: DATA_SOURCE_USER_FILE
            value: {{ tpl .Values.config.datasource.userFile . }}
          {{- else }}
          - name: DATA_SOURCE_USER
            value: {{ tpl .Values.config.datasource.user . }}
          {{- end }}
          {{- end }}
          {{- if .Values.config.datasource.pgpassfile }}
          - name: PGPASSFILE
            value: {{ tpl .Values.config.datasource.pgpassfile  . }}
          - name: DATA_SOURCE_PASS
            value: ""
          {{- else }}
          {{- if .Values.config.datasource.passwordFile }}
          - name: DATA_SOURCE_PASS_FILE
            value: {{ tpl .Values.config.datasource.passwordFile . }}
          {{- else }}
          - name: DATA_SOURCE_PASS
            valueFrom:
              secretKeyRef:
          {{- if .Values.config.datasource.passwordSecret }}
                name: {{ tpl .Values.config.datasource.passwordSecret.name . }}
                key: {{ tpl .Values.config.datasource.passwordSecret.key . }}
          {{- else }}
                name: {{ template "prometheus-postgres-exporter.fullname" . }}
                key: data_source_password
          {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- with .Values.extraEnvs }}
          {{- if kindIs "map" . }}
          {{- range $name, $value := . }}
          - name: {{ $name }}
            value: {{ tpl $value $ | quote }}
          {{- end }}
          {{- end }}
          {{- if kindIs "slice" . -}}
          {{ toYaml . | nindent 10 }}
          {{- end }}
          {{- end }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.command }}
          command:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if or .Values.config.postgresExporter .Values.config.existingSecret.enabled }}
            - name: postgres-exporter
              mountPath: /etc/postgres_exporter.yml
              subPath: postgres_exporter.yml
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{ toYaml . | nindent 12 }}
            {{- end }}
{{- with .Values.extraContainers }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- if .Values.hostAliases }}
      hostAliases:
{{ toYaml .Values.hostAliases | indent 8 }}
{{- end }}
     {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
{{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      {{- if .Values.config.postgresExporter }}
      - configMap:
          defaultMode: 420
          name: {{ template "prometheus-postgres-exporter.fullname" . }}
        name: postgres-exporter
      {{- else if .Values.config.existingSecret.enabled }}
      - secret:
          defaultMode: 420
          secretName: {{ .Values.config.existingSecret.name }}
        name: postgres-exporter
      {{ end}}

      {{- with .Values.extraVolumes }}
      {{ toYaml . | nindent 6 }}
      {{- end }}
